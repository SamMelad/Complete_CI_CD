on: push

name: Integration

jobs:
  # To check security of code, terraform and some vuleranabilities
  scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Security Tools
      run: |
          TRIVY_VERSION=0.30.4
          TFSEC_VERSION=1.26.3
          GOSEC_VERSION=2.12.0

          ## INSTALL TRIVY Especially for dependecies and images ##
          curl -o trivy.tar.gz -L https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
          tar -xvf trivy.tar.gz
          sudo mv trivy /usr/local/bin

          ## INSTALL GOSEC Especially for Golang code ##
          curl -o gosec.tar.gz -L https://github.com/securego/gosec/releases/download/v${GOSEC_VERSION}/gosec_${GOSEC_VERSION}_linux_amd64.tar.gz
          tar xvf gosec.tar.gz
          sudo mv gosec /usr/local/bin

          ## INSTALL TFSEC Especially for terraform code ##
          curl -o tfsec -L https://github.com/aquasecurity/tfsec/releases/download/v${TFSEC_VERSION}/tfsec-linux-amd64
          chmod +x tfsec
          sudo mv tfsec /usr/local/bin

    - name: Scan With Trivy
      run: |
          trivy fs --security-checks vuln,secret || true

    - name: Scan With GOSEC
      run: |
          gosec ./... || true

    - name: Scan With TFSEC
      run: |
          tfsec -m HIGH || true


  # Run the code in different operating systems to check that it works good in all 
  build:
    needs: [scan]
    strategy:
      matrix:
        os: 
        - ubuntu-latest
        - macos-latest
        - windows-latest
        go-version:
        - 1.16
        - 1.17
        - 1.18
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - shell: bash
        run: |
          go build -o myapp
          go test
          ./myapp &
          res=$(curl localhost:3000)
          [[ $res == 'Hello, World!' ]] 


  # After ensuring it's good and working , build docker image for it to make it portable , Then scan image if there are any security vulnerabilites
  docker-build:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Image
        run: |
          docker build . -t cd:pipeline
      - name: Install Trivay 
        run: |
          TRIVY_VERSION=0.30.4

          curl -o trivy.tar.gz -L https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
          tar -xvf trivy.tar.gz
          sudo mv trivy /usr/local/bin
      - name: Scan With Trivay
        run: |
          trivy image --security-checks vuln,config,secret -s HIGH,CRITICAL || true cd:pipeline

